name: corebanking-pr

trigger: none
pr:
  branches:
    include:
    - corebanking-demo/*

variables:
- name: COMMENT_ID
  value: "<b><u>Diffblue Cover:</u></b> $(git show -s --format=%s)"
- name: COMMENT_SCRIPT_LOCATION
  value: "$(realpath azure-pipelines/scripts/addComment.py)"

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: run_diffblue_tests
  displayName: Run Diffblue Tests
  steps:
  - checkout: self
    persistCredentials: true

  - script: |
      git checkout "$(System.PullRequest.SourceBranch)"
    displayName: 'Checkout Branch'

  - script: |
      git config --global pull.ff only
      git config --global user.email "db-ci-platform@diffblue.com"
      git config --global user.name "Diffblue CI"
    displayName: 'Config git user'

  - script: |
      python3 $(COMMENT_SCRIPT_LOCATION) \
      --token $(GH_DB_TOKEN) \
      --pr_number $(System.PullRequest.PullRequestNumber) \
      --comment_id "$(COMMENT_ID)" \
      --line_tag "<TESTS>" \
      --message "<b>Baseline Tests Status:</b> Running Tests :hourglass_flowing_sand:"
    displayName: 'Comment on PR (Tests started)'

  - script: |
      mvn clean test -B
    displayName: 'Run tests'

  - script: |
      python3 $(COMMENT_SCRIPT_LOCATION) \
      --token $(GH_DB_TOKEN) \
      --pr_number $(System.PullRequest.PullRequestNumber) \
      --comment_id "$(COMMENT_ID)" \
      --line_tag "<TESTS>" \
      --message "<b>Baseline Tests Status:</b> Existing Tests Pass :heavy_check_mark:" 
    displayName: 'Comment on PR (Tests Pass)'
    condition: succeeded()

  - script: |
      python3 $(COMMENT_SCRIPT_LOCATION) \
      --token $(GH_DB_TOKEN) \
      --pr_number $(System.PullRequest.PullRequestNumber) \
      --comment_id "$(COMMENT_ID)" \
      --line_tag "<TESTS>" \
      --message "<b>Baseline Tests Status:</b> Existing Tests Fail :x:"
    displayName: 'Comment on PR (Tests Fail)'
    condition: failed()

- job: update_diffblue_tests
  displayName: Update Diffblue Tests
  dependsOn: run_diffblue_tests
  condition: or(succeeded(), failed())
  variables:
  - name: last_bot_commit

  steps:
  - checkout: self
    persistCredentials: true
  
  - script: |
      git checkout "$(System.PullRequest.SourceBranch)"
    displayName: 'Checkout Branch'

  - script: |
      git config --global pull.ff only
      git config --global user.email "db-ci-platform@diffblue.com"
      git config --global user.name "Diffblue CI"
    displayName: 'Config git user'

  - script: |
      LAST_NON_BOT_COMMIT="$(git rev-list -1 --author='^(?!Diffblue CI).*$' --perl-regexp HEAD --no-merges)"
      echo "Last non bot commit is $LAST_NON_BOT_COMMIT"
      LAST_COMMIT="$(git rev-list HEAD -1 --no-merges)"
      echo "Last commit is $LAST_COMMIT"
      if [[ "$LAST_NON_BOT_COMMIT" == "$LAST_COMMIT" ]]
      then
        echo "##vso[task.setvariable variable=last_bot_commit]0"
      else
        echo "##vso[task.setvariable variable=last_bot_commit]1"
      fi
    displayName: 'Check if last commit was bot commit'

  - script: |
      python3 $(COMMENT_SCRIPT_LOCATION) \
      --token $(GH_DB_TOKEN) \
      --pr_number $(System.PullRequest.PullRequestNumber) \
      --comment_id "$(COMMENT_ID)" \
      --line_tag "<TEST-GEN>" \
      --message "<b>Test Generation Status:</b> Diffblue Cover is generating tests for this pull request :hourglass_flowing_sand:"
    displayName: 'Comment on PR (First run)'
    condition: eq(variables.last_bot_commit, 0)

  - script: |
      mvn compile -B
    displayName: 'Build CoreBanking'
    condition: eq(variables.last_bot_commit, 0)

  - script: |
      mkdir dcover
      cd dcover
      wget -c "$(RELEASE_URL)" -O dcover.zip -q
      unzip dcover.zip
    displayName: 'Get Dcover'
    condition: eq(variables.last_bot_commit, 0)

  - script: |
      git diff origin/"$(System.PullRequest.TargetBranch)" > DiffblueTests.patch
      PATCH_FILE=$(realpath DiffblueTests.patch)
      dcover/dcover create --batch --patch-only $PATCH_FILE --exclude io.diffblue.corebanking.ui.menu.ClientsMenu.executeMenuOption
    displayName: 'Generate tests'
    condition: eq(variables.last_bot_commit, 0)

  - script: |
      git add src/test/java
      if ! git diff --quiet --cached src/test/java
      then
        python3 $(COMMENT_SCRIPT_LOCATION) \
          --token $(GH_DB_TOKEN) \
          --pr_number $(System.PullRequest.PullRequestNumber) \
          --comment_id "$(COMMENT_ID)" \
          --line_tag "<TEST-GEN>" \
          --message "<b>Test Generation Status:</b> Diffblue has pushed a commit to your PR with the updated unit tests :heavy_check_mark: <i>Please inspect the test diff to determine of the behaviour change is as expected</i>"

        git commit -m "Update Diffblue Tests"
        git push
      else
        python3 $(COMMENT_SCRIPT_LOCATION) \
          --token $(GH_DB_TOKEN) \
          --pr_number $(System.PullRequest.PullRequestNumber) \
          --comment_id "$(COMMENT_ID)" \
          --line_tag "<TEST-GEN>" \
          --message "<b>Test Generation Status:</b> Diffblue has finished analysing your pull request but deteced no changes :heavy_check_mark:"

        echo "Nothing to commit"
      fi
    displayName: 'Commit Changes'
    condition: eq(variables.last_bot_commit, 0)

